package com.knowledge.admin.business.news.web;

import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.baomidou.mybatisplus.mapper.Condition;
import com.baomidou.mybatisplus.plugins.Page;
import com.feilong.core.Validator;
import com.knowledge.admin.base.login.BaseAdminController;
import com.knowledge.common.base.enums.EnumResult;
import com.knowledge.common.base.model.Result;
import com.knowledge.common.business.news.entity.TbNewsCategory;
import com.knowledge.common.business.news.service.ITbNewsCategoryService;

/**
 * <p>
 * 资讯类别  前端控制器
 * </p>
 *
 * @author francis
 * @since 2018-11-09
 */
@Controller
@RequestMapping("/newscategory/")

public class TbNewsCategoryController extends BaseAdminController {

	@Autowired
	private ITbNewsCategoryService newsService;
	
	@SuppressWarnings("unchecked")
	@RequestMapping("listUI")
    public String listUI(Map<String,Object> map, Integer page, String name, String from ,String to,Integer status) {
		Condition create = Condition.create();
		if (Validator.isNotNullOrEmpty(name)) {
			create.like("name", name);
		}
		if (Validator.isNotNullOrEmpty(from) && Validator.isNotNullOrEmpty(to)) {
			create.between("DATE_FORMAT(create_time, '%Y-%m-%d')", from, to);
		}
		if (Validator.isNotNullOrEmpty(status) && status != 0) {
			create.andNew("status = "+status);
		}
		create.orderBy("weight", false);
		Page<TbNewsCategory> list = newsService.selectPage(new Page<TbNewsCategory>(null==page?0:page, 10), create);
		map.put("page", list);
		map.put("name", name);
		map.put("from", from);
		map.put("to", to);
		map.put("status", status);
		return "newscategory/list";
    }
	
	@RequestMapping("form")
    public String form(Map<String,Object> map) {
		return "newscategory/form";
    }
	
	@RequestMapping(value = "save", method = RequestMethod.POST)
	@ResponseBody
	public Result add(TbNewsCategory tbnewscategory){
		boolean result = false;
		tbnewscategory.setStatus(tbnewscategory.getStatus() == null ? 2 : tbnewscategory.getStatus());
		if(Validator.isNotNullOrEmpty(tbnewscategory .getId())){
			result = newsService.updateById(tbnewscategory);
		}else{
			result = newsService.insert(tbnewscategory);
		}
		if(result){
			return success();
		}else{
			return fail(EnumResult.ERROR);
		}
	}
	
	@RequestMapping(value="{id}/delete",method=RequestMethod.DELETE)
	@ResponseBody
    public Result delete(@PathVariable(required=true) Integer id) {	
		if(!newsService.deleteById(id)){
			return fail(EnumResult.ERROR);
		}
		return success();
    }	
	
	@RequestMapping(value="{id}/select",method=RequestMethod.GET)
    public String select(Map<String,Object> map,@PathVariable(required=true) Integer id) {	
		TbNewsCategory tbnewscategory = newsService.selectById(id);
		map.put("record", tbnewscategory);
		return "newscategory/edit";
    }
	
	@RequestMapping(value="changeStatus/{id}/{status}",method=RequestMethod.GET)
	@ResponseBody
	public Result changeStatus(@PathVariable("id") Integer id,@PathVariable("status") Integer status) {
		TbNewsCategory newscategory = newsService.selectById(id);
		newscategory.setStatus(status);
		if(newscategory.updateById()) {
			return success();
		}else {
			return error();
		}
	}
}
