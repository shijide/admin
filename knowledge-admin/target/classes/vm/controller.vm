package ${package.Controller};

import java.util.Map;
import org.springframework.stereotype.Controller;
import com.knowledge.admin.base.login.BaseAdminController;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import com.baomidou.mybatisplus.plugins.Page;
import com.feilong.core.Validator;
import com.knowledge.common.base.model.Result;
import ${package.Service}.${table.serviceName};
import ${package.Entity}.${entity};
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

/**
 * <p>
 * ${table.comment}  前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
@Controller
@RequestMapping("/${package.ModuleName}/")

public class ${table.controllerName} extends BaseAdminController {

	@Autowired
	private I${entity}Service ${package.ModuleName}Service;
	
	@RequestMapping("listUI")
    public String listUI(Map<String,Object> map,Integer page) {
		Page<${entity}> list = ${package.ModuleName}Service.selectPage(new Page<${entity}>(null==page?0:page, 10));
		map.put("page", list);
		return "${package.ModuleName}/list";
    }
	
	@RequestMapping("form")
    public String form(Map<String,Object> map) {
		return "${package.ModuleName}/form";
    }
	
	@RequestMapping(value = "save", method = RequestMethod.POST)
	@ResponseBody
	public Result add(${entity} $entity.toLowerCase()){
		boolean result = false;
		if(Validator.isNotNullOrEmpty($entity.toLowerCase() .getId())){
			$entity.toLowerCase() .setUpdateUser(getUserEntity().getAccountName());
			result = ${package.ModuleName}Service.updateById($entity.toLowerCase());
		}else{
			$entity.toLowerCase() .setCreateUser(getUserEntity().getAccountName());
			result = ${package.ModuleName}Service.insert($entity.toLowerCase());
		}
		if(result){
			return success();
		}else{
			return error();
		}
	}
	
	@RequestMapping(value="{id}/delete",method=RequestMethod.DELETE)
	@ResponseBody
    public Result delete(@PathVariable(required=true) Integer id) {	
		if(!${package.ModuleName}Service.deleteById(id)){
			return error();
		}
		return success();
    }	
	
	@RequestMapping(value="{id}/select",method=RequestMethod.GET)
    public String select(Map<String,Object> map,@PathVariable(required=true) Integer id) {	
		${entity} $entity.toLowerCase() = ${package.ModuleName}Service.selectById(id);
		map.put("record", $entity.toLowerCase());
		return "${package.ModuleName}/edit";
    }	
}
